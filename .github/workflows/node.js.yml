# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    tags:
      - 'v*'

permissions: 
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    - run: npm install
    - run: npm run pkg    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pm2-stand-alone
        path: package/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts 
        uses: actions/download-artifact@v2 
        with :
          name : pm2-stand-alone 

      - name : Create Release 
        id : create_release 
        uses : actions/create-release@v1 
        env :
          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token 
        with :
          tag_name : ${{ github.ref }}
          release_name : Release ${{ github.ref }}
          draft : false 
          prerelease : false 

      - name : Upload Release Asset for Window
        id : upload-release-asset-win 
        uses : actions/upload-release-asset@v1
        env :
          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        with :
          upload_url : ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info at https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path : ./pm2-stand-alone-win.exe
          asset_name : pm2-stand-alone-win
          asset_content_type : application/octet-stream      
          
      - name : Upload Release Asset for Linux
        id : upload-release-asset-linux 
        uses : actions/upload-release-asset@v1
        env :
          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        with :
          upload_url : ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info at https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path : ./pm2-stand-alone-linux
          asset_name : pm2-stand-alone-linux
          asset_content_type : application/octet-stream                
